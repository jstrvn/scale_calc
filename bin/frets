#!/usr/bin/env ruby
require 'bundler'
Bundler.require

require 'optparse'
require_relative "../errors"
require_relative "../scales"
require_relative "../guitar_tool"

if $PROGRAM_NAME == __FILE__
  options = {
    scale: "m",
    key: "c",
    lower_fret: 0,
    upper_fret: 19,
    strings: "oooooo",
    frets: 19
  }  
  OptionParser.new do |opts|
    opts.banner = "Usage: ./frets [options]"

    opts.on("-sScale", "--scale=SCALE", "Use scale") do |s|
      options[:scale] = s
    end

    opts.on("-kKEY", "--key=KEY", "Use key") do |k|
      options[:key] = k
    end

    opts.on("-lLOWER_FRET", "--lower-fret=LOWER_FRET", "Lower fret") do |lf|
      options[:lower_fret] = lf.to_i
    end

    opts.on("-uUPPER_FRET", "--upper-fret=UPPER_FRET", "Upper fret") do |uf|
      options[:upper_fret] = uf.to_i
    end

    opts.on("-tSTRINGS", "--string=STRINGS", "String") do |strings|
      options[:strings] = strings
    end

    opts.on("-fFRETS", "--frets=FRETS", "Frets") do |frets|
      options[:frets] = frets.to_i
    end
  end.parse!

  pp options 

  current_key = options[:key].downcase
  #generate flags from class names
  mode = options[:scale].downcase
  s = all_scales[mode].new(current_key)
  puts "---scale---"
  puts all_scales[mode]
  puts "---notes---"
  p s.notes
  puts "---frets---"
  g = GuitarTool.new(options[:frets])

  strings = []
  options[:strings].each_char{strings << _1}

  lower_fret = options[:lower_fret] || 0
  upper_fret = options[:upper_fret] || options[:frets]
  pp g.frets_list_for_scale(all_scales[mode].new(current_key).notes, strings:, lower_fret:, upper_fret:)
end